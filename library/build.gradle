apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "org.jlleitschuh.gradle.ktlint-idea"
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 31

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
    libraryVariants.all {
        it.generateBuildConfig.enabled = false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        encoding = 'UTF-8'
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api 'androidx.appcompat:appcompat:1.4.1'
    api 'androidx.constraintlayout:constraintlayout:2.1.3'
    api "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    api 'androidx.core:core-ktx:1.7.0'
    api 'androidx.fragment:fragment-ktx:1.4.1'
    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    api 'com.android.support:support-annotations:28.0.0'

    api "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"

    api "com.squareup.okhttp3:okhttp:$okhttpVersion"

    api "com.squareup.retrofit2:retrofit:$retrofitVersion"
    api "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    // Unit Test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutinesTestVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-android:$mockietAndroidVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "com.google.truth:truth:1.1"

    implementation 'org.jetbrains.kotlinx:kotlinx-html-jvm:0.7.2'
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'app.ss-n'
                artifactId = 'common-ktx'
                version = "$libraryVersion"
            }
        }
    }
}

ktlint {
    version = "0.22.0"
    android = true
    outputToConsole = true
    reporters {
        reporter "checkstyle"
    }
    ignoreFailures = true

    filter {
        exclude("**/*test*/**")
    }
}

// https://kotlin.github.io/dokka/1.4.0/user_guide/gradle/usage/
dokkaGfm.configure {
    outputDirectory.set(file("../docs"))
    dokkaSourceSets {
        configureEach {
            jdkVersion.set(8)
        }
    }
}